name: Demo to Delpoy OAS to Kong # Specify the name of the deployment

on:
  push:
    branches:
      - main  # Trigger the deployment when pushing to the main branch
#j
jobs:
  OAS_To_KONG:
    runs-on: ubuntu-latest  # Use Ubuntu as the operating system for the job

    steps:
    - name: Checkout Code  # Checkout the code from the repository
      uses: actions/checkout@v2

    - name: Install Insomnia CLI  # Install Insomnia CLI for linting and generating Kong configuration
      run: |
        wget https://github.com/Kong/insomnia/releases/download/lib%403.14.0-beta.1/inso-linux-3.14.0-beta.1.tar.xz
        tar -xf inso-linux-3.14.0-beta.1.tar.xz
    

    - name: Installing NodeJs
      uses: actions/setup-node@v1
    - name: Installing inso
      run:  npm install -g insomnia
    - name: Test the Inso OpenApSpec
      run: ./inso run test spc_0d1e37
    - name: Lint OpenAPI Spec  # Lint the OpenAPI spec using Insomnia CLI
      run: ./inso lint spec spc_0d1e37
    # - name: Get the current path
    #   run: $(pwd)
    - name: Generate kong.yaml  # Generate Kong configuration in declarative format
      run: ./inso generate config spc_0d1e37 --type declarative -o kong.yaml --kongVersion 3
    - name: install deck CLI  # Install deck CLI for syncing Kong configuration
      run: |
        curl -sL https://github.com/kong/deck/releases/download/v1.17.2/deck_1.17.2_linux_amd64.tar.gz -o deck.tar.gz
        tar -xf deck.tar.gz -C /tmp 
        sudo cp /tmp/deck /usr/local/bin/
          
    - name: Deploy to Kong  # Sync the Kong configuration to Kong API Gateway
      run: deck sync -s kong.yaml --header --kong-addr ${KONG_ADDR}
      # run: deck sync -s kong.yaml   --kong-addr http://44.203.184.142/:8001
